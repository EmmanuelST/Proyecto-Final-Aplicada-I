<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABFTAAARUwAAAAAAAAAA
        AAAAAAAAlH9kAJR/ZACUf2QAlH9kAJR/ZAGUf2QBmZBmAKW7bQCnxG4BorJrAJeKZQCUf2QBlH9kAH6C
        dwCZfmAAlH9kAJR/ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJR/ZACUf2QBlH9kA5R/ZASUf2QCkHRiALLpdACnw24Ap8RuA6fEbgKnxG4Cq9FwAI1j
        YACUf2QBlH9kBJR/ZASUf2QBlH9kAJR/ZACUf2QAlH9kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAlH9kA5R/ZAGUf2QAlH9kAJR/ZACUf2QPlH9kF49tYQChr2sCp8NuBZmQ
        ZgCalWcClH9kF5SAZAKUf2QAlH9kAJR/ZACUf2QDlH9kApR/ZACUf2QAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUf2QAlH9kBZR/ZDuUf2R/lH9kv5R/ZMqVgWQon6ZqAKfD
        bmynxG7WpsFuMJydaACUgGRblH9k05R/ZJuUf2RalH9kGZR/ZACUf2QBlH9kAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJR/ZGmUf2TblH9k/5R/ZPyUf2T/lIBkwqCp
        agCnw25sp8Ru/6fEbv+nw27zrNhxHI5rYRqUgGT8lH9k/5R/ZP+Uf2T0lH9ktZR/ZCqUf2QAlH9kAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlH9kyZR/ZP+Uf2T7lH9k+ZR/
        ZP+UgGTmx/9/AKjGbmWnxG7/p8Ru+6fDbvi5/3cPknhjQ5R/ZP+Uf2T4lH9k/JR/ZPuUf2T/lH9kaJR/
        ZACUf2QEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUf2TFlH9k/5R/
        ZP2Uf2T+lH9k/5SAZP+NZWAeq9JwLafDbv+nxG7/p8Nu1pWCZACUf2R5lH9k/5R/ZPuUf2T/lH9k+pR/
        ZP+Uf2RllH9kAJR/ZAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJR/
        ZMiUf2T/lH9k/ZR/ZP+Uf2T8lH9k/5N7Y0/v/5QEp8Nu7afEbv+nw26qnqJpAJSAZK2Uf2T/lH9k+5R/
        ZP+Uf2T7lH9k/5R/ZGeUf2QAlH9kBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAlH9kyJR/ZP+Uf2T9lH9k/5R/ZPuUf2T/lH9khJiMZgCnw27Lp8Ru/6fEbnSoxm4AlIBk2JR/
        ZP+Uf2T9lH9k/5R/ZPuUf2T/lH9kZ5R/ZACUf2QEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACUf2TIlH9k/5R/ZP2Uf2T/lH9k/JR/ZP+UgGS2n6ZqAKfDbp+nxG7/qctvPoE6
        Wg6UgGT4lH9k/5R/ZP6Uf2T/lH9k+5R/ZP+Uf2RnlH9kAJR/ZAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJR/ZMiUf2T/lH9k/ZR/ZP+Uf2T9lH9k/5SAZN+t2nEAp8Vub6fD
        bv+5/3cPknZjO5R/ZP+Uf2T9lH9k/5R/ZP+Uf2T7lH9k/5R/ZGeUf2QAlH9kBKfEbgCnxG4Ap8RuAafE
        bgOnxG4Dp8RuAqfEbgCnxG4Ap8RuAKfEbgAAAAAAlH9kv5R/ZP+Uf2T9lH9k/5R/ZP2Uf2T9lIBk/YZM
        XRSpzW9Bp8Ju6JN6YwCUfmRzlH9k/5R/ZPiUf2T/lH9k/5R/ZPuUf2T/lH9kXpR/ZACTe2MEp8RuAqfE
        bgOnxG4Ap8RuAKfEbgCnxG4Ap8RuAafEbgSnxG4Ap8RuAKfEbgCUf2SJlH9k/5R/ZPqUf2T9lH9k/ZR/
        ZP6Uf2T/knhjPbHocxOmv210mpVnAJR/ZJ2Uf2T/lH9k/JR/ZPyUf2T9lH9k/JR/ZP+Uf2QvlH9kAJ6j
        aQWnxG4Bp8RuAKfEbhinxG4+p8RuRKfEbiinxG4Dp8RuAKfEbgKnxG4Bp8RuAJR/ZBuUf2ThlH9k/5R/
        ZP+Uf2TzlH9kiZR/ZBuUf2QAlH9kAZR/ZACTgWcAlH9kApR/ZEeUf2TElH9k/5R/ZPuUf2T/lH9knpSA
        ZACgqWoFqMhvAKfEbi6nxG6xp8Ru9qfEbv+nxG7+p8Ru/afEbtWnxG5fpsRtAKfEbgKnxG4BlH9kAJR/
        ZCyUf2TglH9kzpR/ZCGUf2QAlH9kI5R/ZHmUf2SplIBktJR/ZJiUf2RTlH9kBpR/ZACUf2RrlH9k/ZR/
        ZJmUf2QFqtBwAqjJbwCnxG5bp8Ru+6fEbv+nxG7+p8Ru/6fEbv+nxG7+p8Ru/afEbv+nxG6np8RuA6fE
        bgCUf2QClH9kAJR/ZBCUf2QOlH9kCZR/ZKCUf2T/lH9k/5R/ZP+Uf2T/lH9k/pR/ZP+Uf2TmlH9kUJR/
        ZACUf2QclIBkAqGwawSox24Ap8RuQafEbv6nxG7+p8Ru+qfEbv+nxG7cp8RuzKfEbv+nxG78p8Ru+afE
        bv+nxG6Sp8RuAJR/ZACUf2QDlH9kAJR/ZBKUf2TNlH9k/5R/ZPyUf2T7lH9k+5R/ZPyUf2T7lH9k/JR/
        ZP6Uf2T/lH9kcZR/ZACWhmUFjmthAZmRaACnxG7Kp8Ru/6fEbvqnxG74p8Ru/6fEbkOnxG4Np8Ru9KfE
        bv2nxG77p8Ru/qfEbvynxG4+lH9kAJR/ZAGUf2QAlH9krZR/ZP+Uf2T5lH9k/pR/ZP+Uf2T/lH9k/5R/
        ZP+Uf2T/lH9k/JR/ZPyUf2T/lH9kRI5oYQCs1nEAp8RuPKfEbv+nxG79p8Ru/6fEbv2nxG7/p8RuO6fE
        bganxG7wp8Ru/6fEbv6nxG78p8Ru/6fEbqGUf2QDlH9kAJR/ZEeUf2T/lH9k+5R/ZP+Uf2T/lH9k/5R/
        ZP+Uf2T/lH9k/5R/ZP+Uf2T/lH9k/JR/ZP+Uf2TE5/+PAajGbgCnxG5wp8Ru/6fEbv+nxG7Xp8RufafE
        boenxG4ep8RtA6fEbnunxG58p8RuvKfEbv+nxG7/p8Ru15R/ZASUf2QAlH9kopR/ZP+Uf2T7lH9k/5R/
        ZP+Uf2T/lH9k/5R/ZP+Uf2T/lH9k/5R/ZP+Uf2T/lH9k/pR/ZP+VhGU2oKtqAKfDboKnxG7/p8Ru/6fE
        boOnxG4Ap8RuBKfEbgCoxmwAp8RuA6fEbgCnxG5Kp8Ru/6fEbv+nxG7mk4BlAJV+YwCUf2TTlH9k/5R/
        ZP2Uf2T/lH9k/5R/ZP+Uf2T/lH9k/5R/ZP+Uf2T/lH9k/5R/ZP+Uf2T7lH9k/5WCZGeeomkApsJubqfE
        bv+nxG7+p8Ru86fEbsCnxG7Ip8RuLafEbQWnxG63p8RuwKfEbuanxG7/p8Ru/6fEbtOUf2QAlH9kCJR/
        ZOKUf2T/lH9k/ZR/ZP+Uf2T/lH9k/5R/ZP+Uf2T/lH9k/5R/ZP+Uf2T/lH9k/5R/ZPuUf2T/lIBkeZuZ
        aACmv204p8Ru/6fEbv6nxG7+p8Ru/afEbv+nxG46p8RtBKfEbvGnxG7/p8Ru/qfEbvynxG7/p8RulpR/
        ZACUgGMBlH9k1pR/ZP+Uf2T9lH9k/5R/ZP+Uf2T/lH9k/5R/ZP+Uf2T/lH9k/5R/ZP+Uf2T/lH9k+5R/
        ZP+Uf2Rok3tjAOP/jQCnxG68p8Ru/6fEbvqnxG75p8Ru/6fEblynxG4op8Ru+6fEbv2nxG78p8Ru/6fE
        bvWnxG4wlH9kA5R/ZACUf2SqlH9k/5R/ZPyUf2T/lH9k/5R/ZP+Uf2T/lH9k/5R/ZP+Uf2T/lH9k/5R/
        ZP+Uf2T9lH9k/5R/ZDmQcWIAsOZzAKfEbi+nxG7zp8Ru/6fEbvqnxG7/p8Ru96fEbvOnxG7/p8Ru+6fE
        bvqnxG7/p8Rue6fEbgCUf2QDlH9kAJR/ZFOUf2T/lH9k+5R/ZP+Uf2T/lH9k/5R/ZP+Uf2T/lH9k/5R/
        ZP+Uf2T/lH9k/JR/ZP+Uf2TPlIBkApaIZQCjt2wDp8RuAKfEbkGnxG7sp8Ru/6fEbv6nxG7/p8Ru/6fE
        bv6nxG7+p8Ru/6fEboinxG4Ap8RuApR/ZACUfmQAlH5kAJR/ZL2Uf2T/lH9k+ZR/ZP+Uf2T/lH9k/5R/
        ZP+Uf2T/lH9k/5R/ZP2Uf2T7lH9k/5R/ZFOUf2QAlIBkA6nMbwCnxG4Dp8RuAKfEbhmnxG6Qp8Ru4afE
        bvqnxG79p8Ru7qfEbrenxG5Bp8RuAKfEbgOnxG4AlH9kAJR/ZAGUf2QAlH9kHpR/ZN6Uf2T/lH9k+5R/
        ZPuUf2T8lH9k/ZR/ZPyUf2T7lH9k/ZR/ZP+Uf2SGlH9kAJR/ZAKVgWQAoa1rAKfEbgCnxG4Cp8RuAafE
        bgCnxG4Hp8RuIqfEbiinxG4Rp8RuAKfEbQCnxG4Dp8RuAafEbgCUf2QAlH9kAJR/ZAKUf2QAlH9kG5R/
        ZLmUf2T/lH9k/pR/ZP+Uf2T/lH9k/pR/ZP+Uf2T0lH9ka5R/ZACUf2QClH9kAJR/ZACis2sAp8RuAKfE
        bgCnxG4Cp8RuBKfEbgCnxG4Ap8RuAKfEbgCnxG4Dp8RuA6fDbgCnxm4Ap8RuAJR/ZACUf2QAlH9kAJR/
        ZAKUf2QBk31mAJR/ZEKUf2SZlH9kw5R/ZMuUf2S1lH9kdpR/ZBqUf2QAlH9kA5R/ZACUf2QAlH9kAAAA
        AAAAAAAAp8RuAKfEbgCmxG4Ap8RuAafEbgKnxG4Cp8RuAafEbgCnxG4Ap8RuAKfEbgAAAAAAAAAAAJR/
        ZACUf2QAlH9kAJR/ZAKUf2QClH9kAJR/ZACUfmMAAAAAAJR/ZACUf2QAlH9kAJR/ZAOUf2QAlH9kAJR/
        ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJR/ZACUf2QAlH9kAJR/ZACUf2QDlH9kBJR/ZAKUf2QBlH9kA5R/ZASUf2QClH9kAJR/
        ZACUf2QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTfmMAlH9kAJR/ZACUf2QAlH9kAJR/ZACUf2QAlH9kAJR/
        ZACUf2QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA0SP//4YYL/8pIpf/gRBP/wIAF/8CABf/ABAX/wAQF/8BEBf/AQAX/wEA
        FAsAIBEiACASCQEAKASEBBAAQAIgAaABIAAgAMAAQABAAEAAQlDAAEAAgABAAIAAYABAAGABQABQAiAA
        qAQgARIRUAIopqAEsgvS0X//6AT///4X//8=
</value>
  </data>
</root>